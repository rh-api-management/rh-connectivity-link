    # ------------------------------------------------------------------------------
    # Build Stage
    # ------------------------------------------------------------------------------

    # Use bullseye as build image instead of Bookworm as ubi9 does not not have GLIBCXX_3.4.30
    # https://access.redhat.com/solutions/6969351

    FROM registry.redhat.io/ubi9/ubi:latest AS limitador-build

    RUN PKGS="rust-toolset llvm-toolset gcc-c++ gcc-toolset-12-binutils-gold protobuf-devel protobuf-compiler openssl-devel perl git"  \
    && dnf install --nodocs --assumeyes $PKGS \
    && rpm --verify --nogroup --nouser $PKGS \
    && yum -y clean all
    
    WORKDIR /tmp/limitador
    ARG GITHUB_SHA
    ARG CARGO_ARGS
    ENV GITHUB_SHA=${GITHUB_SHA:-unknown}
    ENV RUSTFLAGS="-C target-feature=-crt-static"

    # We set the env here just to make sure that the build is invalidated if the args change
    ENV CARGO_ARGS=${CARGO_ARGS}

    # The following allows us to cache the Cargo dependency downloads with image layers
    COPY limitador/Cargo.toml /limitador/Cargo.lock ./
    COPY limitador/limitador/Cargo.toml ./limitador/
    COPY limitador/limitador-server/Cargo.toml ./limitador-server/
    COPY limitador/.cargo/config.toml ./.cargo/config.toml
    RUN mkdir -p limitador-server/src && echo 'fn main() {}' > limitador-server/src/main.rs
    RUN cargo build --release ${CARGO_ARGS} --offline

    COPY limitador/LICENSE /licenses/LICENSE

    COPY limitador/limitador ./limitador
    COPY limitador/limitador-server ./limitador-server

    RUN cargo build --release ${CARGO_ARGS} --offline

    # ------------------------------------------------------------------------------
    # Run Stage
    # ------------------------------------------------------------------------------
    
    FROM registry.redhat.io/ubi9/ubi:latest
    # Labels consumed by Red Hat build service
    # Please keep the version label first as it is looked up by the Makefile - also, it is meant to be the image tag.
    LABEL version="1.0.0" \
            com.redhat.component="limitador-container" \
            name="rhcl-1/limitador-rhel9" \
            summary="Limitador is a generic rate-limiter written in Rust." \
            description="Limitador is a generic rate-limiter written in Rust. It can be used as a library, or as a service. The service exposes HTTP endpoints to apply and observe limits. Limitador can be used with Envoy because it also exposes a grpc service, on a different port, that implements the Envoy Rate Limit protocol (v3)." \
            io.k8s.display-name="Limitador Rate Limiting" \
            io.k8s.description="Limitador is a generic rate-limiter written in Rust. It can be used as a library, or as a service. The service exposes HTTP endpoints to apply and observe limits. Limitador can be used with Envoy because it also exposes a grpc service, on a different port, that implements the Envoy Rate Limit protocol (v3)." \
            io.openshift.tags="rate limiting, envoy, api" \
            maintainer="asnaps@redhat.com"

    # shadow-utils is required for `useradd`
    RUN PKGS="libgcc shadow-utils" \
        && dnf --assumeyes install --nodocs $PKGS \
        && rpm --verify --nogroup --nouser $PKGS \
        && dnf --assumeyes clean all

    RUN useradd -u 1000 -s /bin/sh -m -d /home/limitador limitador

    WORKDIR /home/limitador/bin/
    ENV PATH="/home/limitador/bin:${PATH}"

    COPY --from=limitador-build /tmp/limitador/limitador-server/examples/limits.yaml ../
    COPY --from=limitador-build /tmp/limitador/target/release/limitador-server ./limitador-server
    COPY --from=limitador-build licenses/LICENSE /licenses/LICENSE
    
    RUN chown -R limitador:root /home/limitador \
        && chmod -R 750 /home/limitador

    USER limitador

    CMD ["limitador-server"]