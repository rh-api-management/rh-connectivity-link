# Based on ./gatekeeper-operator/Dockerfile
# Build the manager binary

FROM registry.access.redhat.com/ubi9/go-toolset:1.21 AS drift-detectorist
USER 0
COPY drift-detection/detector.sh /detector.sh
# Check to see if we need to react to any upstream changes
COPY drift-cache /drift-cache
WORKDIR /tmp
COPY authorino-operator/Dockerfile .
RUN /detector.sh ./Dockerfile /drift-cache/authorino-operator/Dockerfile

FROM registry.access.redhat.com/ubi9/go-toolset:1.21 AS builder

# TODO: cleanup if not needed
#ENV LDFLAGS="-X ${VERSION_PKG}.gitVersion=v3.15.1-7 \
#             -X ${VERSION_PKG}.gitCommit=59587323ce32580b4dffba0a09b1ca22109925db \
#             -X ${VERSION_PKG}.gitTreeState=clean \
#             -X ${VERSION_PKG}.buildDate="

ENV LDFLAGS="-X ${VERSION_PKG}.buildDate="
ENV BINARY_NAME="manager"

WORKDIR /workspace
# Copy the Go Modules manifests
COPY authorino-operator/go.mod go.mod
COPY authorino-operator/go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY authorino-operator/main.go main.go
COPY authorino-operator/api/ api/
COPY authorino-operator/controllers/ controllers/
COPY authorino-operator/pkg/ pkg/

ARG OPERATOR_VERSION=latest
ARG DEFAULT_AUTHORINO_IMAGE=quay.io/kuadrant/authorino:latest
ARG GIT_SHA=unknown
ARG DIRTY=unknown

RUN CGO_ENABLED=0 GO111MODULE=on go build -a -ldflags "-X main.version=${OPERATOR_VERSION} -X main.gitSHA=${GIT_SHA} -X main.dirty=${DIRTY} -X github.com/kuadrant/authorino-operator/controllers.DefaultAuthorinoImage=${DEFAULT_AUTHORINO_IMAGE}" -o manager main.go

################################################################


FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

LABEL summary="authorino operator container image" \
      description="authorino Operator provides an easy way to install authorino, providing configurability options at the time of installation." \
            io.k8s.display-name="authorino Operator" \
            io.openshift.expose-services="" \
            io.openshift.tags="rate limiting, authorino, api" \
      vendor="Red Hat, Inc."

ENV OPERATOR_BINARY_NAME="manager" \
  USER_UID=1001 \
  USER_NAME=authorino-operator

USER root

# install operator binary
COPY --from=builder /workspace/${OPERATOR_BINARY_NAME} /
RUN chown ${USER_UID} /${OPERATOR_BINARY_NAME}

# TODO: Install licenses
# ENV LICENSES_DIR="/licenses/apicast-operator/"
# RUN mkdir -p ${LICENSES_DIR}
# COPY authorino-operator/LICENSE ${LICENSES_DIR}
# RUN chown ${USER_UID} ${LICENSES_DIR}/licenses

ENTRYPOINT ["/manager"]

USER ${USER_UID}